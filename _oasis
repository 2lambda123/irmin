OASISFormat: 0.4
Name:        irmin
Version:     0.8.3
Synopsis:    A Distributed Version Control Database
Authors:     Thomas Gazagnaire
License:     ISC
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild

AlphaFeatures: pure_interface

Flag unix
  Description: build the Unix library
  Default: true

Flag examples
  Description: build the examples
  Default: false

Library irmin
  Path: lib/core
  Findlibname: irmin
  Modules: IrminCore, Irmin, IrminGraph, IrminKey, IrminSnapshot,
           IrminMisc, IrminCommit, IrminStore, IrminBlock,
           IrminTag, IrminContents, IrminNode, IrminVersion,
           IrminDump, IrminPath, IrminWatch, IrminMerge, IrminView,
           IrminOrigin, IrminBranch, IrminSync
  BuildDepends: ezjsonm, ocamlgraph, lwt, sha,
                re.pcre, re.perl, dolog, mstruct, uri,
                bin_prot.syntax, comparelib.syntax, sexplib.syntax
  XMETARequires: ezjsonm, ocamlgraph, lwt, sha,
                 re.pcre, re.perl, dolog, mstruct, uri

Library "irmin-backend"
  Path: lib/backend
  Findlibname: backend
  FindlibParent: irmin
  BuildDepends: irmin, cohttp.lwt, ezjsonm.lwt, git
  Modules: IrminCRUD, IrminMemory, IrminGit, IrminFS

Library "irmin-server"
  Path: lib/server
  Findlibname: server
  FindlibParent: irmin
  BuildDepends: cohttp.lwt, irmin
  Modules: IrminHTTP, IrminHTTPStatic

Library "irmin-unix"
  Build$: flag(unix)
  Install$: flag(unix)
  Path: lib/unix
  Findlibname: unix
  FindlibParent: irmin
  BuildDepends: irmin, lwt.unix, irmin.backend, irmin.server, git.unix
  Modules: Irmin_unix

Document irmin
  Title:                Irmin docs
  Type:                 OCamlbuild (0.4)
  BuildTools+:          ocamldoc
  Install:              true
  XOCamlbuildPath:      lib/core
  XOCamlbuildLibraries: irmin

Document backend
  Title:                Irmin backends docs
  Type:                 OCamlbuild (0.4)
  BuildTools+:          ocamldoc
  Install:              true
  XOCamlbuildPath:      lib/backend
  XOCamlbuildLibraries: irmin.backend

Executable irmin
  Path:               lib/driver
  MainIs:             irminMain.ml
  Build$:             flag(unix)
  CompiledObject:     best
  Install:            true
  BuildDepends:       cmdliner, irmin, irmin.unix

Executable test_irmin
  Path:               lib_test
  MainIs:             test.ml
  Build$:             flag(tests) && flag(unix)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix, alcotest, cryptokit

Test test_irmin
  Run$:               flag(tests) && flag(unix)
  Command:            $test_irmin -q
  WorkingDirectory:   lib_test

Executable test_git_store
  Path:               examples/
  MainIs:             git_store.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix

Executable test_custom_merge
  Path:               examples/
  MainIs:             custom_merge.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix

Executable test_views
  Path:               examples/
  MainIs:             views.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix

Executable test_contatcs
  Path:               examples/
  MainIs:             contacts.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix

Executable test_intrusion
  Path:               examples/
  MainIs:             intrusion.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix

Executable test_process
  Path:               examples/
  MainIs:             process.ml
  Build$:             flag(unix) & flag(examples)
  CompiledObject:     best
  Install:            false
  BuildDepends:       irmin, irmin.unix
